/*
Deployment script for BlogDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "BlogDB"
:setvar DefaultFilePrefix "BlogDB"
:setvar DefaultDataPath "C:\Users\James Chan\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\James Chan\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [dbo].[Admins]...';


GO
CREATE TABLE [dbo].[Admins] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [UserName]   NVARCHAR (30) NOT NULL,
    [FirstName]  NVARCHAR (50) NOT NULL,
    [MiddleName] NVARCHAR (50) NULL,
    [LastName]   NVARCHAR (50) NOT NULL,
    [Nickname]   NVARCHAR (15) NOT NULL,
    [Email]      NVARCHAR (25) NOT NULL,
    [Password]   NVARCHAR (30) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Barangay]...';


GO
CREATE TABLE [dbo].[Barangay] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [BarangayName] NVARCHAR (50) NOT NULL,
    [City]         NVARCHAR (50) NULL,
    [Zip]          INT           NOT NULL,
    [District]     NVARCHAR (50) NOT NULL,
    [Province]     NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Barangay_Employee]...';


GO
CREATE TABLE [dbo].[Barangay_Employee] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [FirstName]  NVARCHAR (50) NOT NULL,
    [MiddleName] NVARCHAR (50) NULL,
    [LastName]   NVARCHAR (50) NOT NULL,
    [Gender]     NVARCHAR (50) NOT NULL,
    [Email]      NVARCHAR (50) NOT NULL,
    [Address]    NVARCHAR (50) NOT NULL,
    [DateJoined] DATETIME2 (7) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Posts_Employee]...';


GO
CREATE TABLE [dbo].[Posts_Employee] (
    [Id]           INT             IDENTITY (1, 1) NOT NULL,
    [AdminId]      INT             NOT NULL,
    [BarangayName] NVARCHAR (50)   NOT NULL,
    [Position]     NVARCHAR (50)   NOT NULL,
    [CurrentPay]   DECIMAL (18, 2) NOT NULL,
    [DateJoined]   DATETIME2 (7)   NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Salary]...';


GO
CREATE TABLE [dbo].[Salary] (
    [Id]           INT             IDENTITY (1, 1) NOT NULL,
    [BarangayName] NVARCHAR (50)   NOT NULL,
    [LastName]     NVARCHAR (50)   NOT NULL,
    [FirstName]    NVARCHAR (50)   NOT NULL,
    [Position]     NVARCHAR (50)   NOT NULL,
    [CurrentPay]   DECIMAL (18, 2) NOT NULL,
    [TotalPay]     DECIMAL (18, 2) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Posts_Employee_Admins]...';


GO
ALTER TABLE [dbo].[Posts_Employee] WITH NOCHECK
    ADD CONSTRAINT [FK_Posts_Employee_Admins] FOREIGN KEY ([AdminId]) REFERENCES [dbo].[Admins] ([Id]);


GO
PRINT N'Altering Procedure [dbo].[spPosts_Detail]...';


GO
ALTER PROCEDURE [dbo].[spPosts_Detail]
	@id int
AS
begin
	SELECT [p].[Id], [p].[BarangayName], [p].[Position], [p].[CurrentPay], [u].[LastName], [u].[FirstName], [p].[DateJoined]
	FROM dbo.Posts_Employee p
	INNER JOIN dbo.Barangay_Employee u
	ON p.adminId = u.Id
	WHERE p.Id = @id;
end

RETURN 0
GO
PRINT N'Altering Procedure [dbo].[spPosts_Insert]...';


GO
ALTER PROCEDURE [dbo].[spPosts_Insert]
	@adminId int,
	@barangayName nvarchar(50),
	@position nvarchar(50),
	@currentPay decimal(18, 2),
	@dateJoined datetime2
AS
begin
	INSERT INTO dbo.Posts_Employee
		(adminId, BarangayName, Position, CurrentPay, DateJoined)
		VALUES (@adminId, @barangayName, @position, @currentPay, @dateJoined)
end
GO
PRINT N'Altering Procedure [dbo].[spPosts_List]...';


GO
ALTER PROCEDURE [dbo].[spPosts_List]
AS
begin
	set nocount on;

	SELECT [p].[Id], [p].[BarangayName], [p].[Position], [p].[CurrentPay], [u].[LastName], [u].[FirstName], [p].[DateJoined]
	FROM dbo.Posts_Employee p
	INNER JOIN dbo.Barangay_Employee u
	ON p.adminId = u.Id
end
GO
PRINT N'Creating Procedure [dbo].[spAdmin_Update]...';


GO
CREATE PROCEDURE [dbo].[spAdmin_Update]
	@adminId int,
	@userName nvarchar(30),
	@firstName nvarchar(30),
	@lastName nvarchar(25),
	@nickName nvarchar(15),
	@email nvarchar(30),
	@password nvarchar(30)
AS
begin
	set nocount on;

	UPDATE dbo.Admins
	SET 
		UserName = @userName, 
		FirstName = @firstName, 
		LastName = @lastName,
		Nickname = @nickName,
		Email = @email,
		Password = @password
	WHERE Id = @adminId;
end
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[spAdmins_Authenticate]...';


GO
CREATE PROCEDURE [dbo].[spAdmins_Authenticate]
	@username nvarchar(30),
	@password nvarchar(30)
AS
begin

	set nocount on;
	SELECT [Id], [UserName], [FirstName], [MiddleName], [LastName], [Nickname], [Email], [Password]
	FROM dbo.Admins
	WHERE UserName = @username
	AND Password = @password;

end

RETURN 0
GO
PRINT N'Creating Procedure [dbo].[spAdmins_Register]...';


GO
CREATE PROCEDURE [dbo].[spAdmins_Register]
	@userName nvarchar(30),
	@firstName nvarchar(50),
	@middleName nvarchar(50),
	@lastName nvarchar(50),
	@nickName nvarchar(15),
	@email nvarchar(25),
	@password nvarchar(30)
AS
begin
	set nocount on;

	INSERT INTO dbo.Admins
		(UserName, FirstName, MiddleName, LastName, Nickname, Email, Password)
		VALUES (@userName, @firstName, @lastName, @password)
end
GO
PRINT N'Creating Procedure [dbo].[spPosts_Delete]...';


GO
CREATE PROCEDURE [dbo].[spPosts_Delete]
	@postsEmployeeId int
AS
begin
	DELETE FROM dbo.Posts_Employee
	WHERE [Id] = @postsEmployeeId
end
RETURN 0
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Posts_Employee] WITH CHECK CHECK CONSTRAINT [FK_Posts_Employee_Admins];


GO
PRINT N'Update complete.';


GO
